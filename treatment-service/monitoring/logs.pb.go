// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: api/proto/logs.proto

package monitoring

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The header from the incoming request to XP services. The map value is a comma-delimited string.
	Header string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// The JSON body of the request to XP services, UTF-8-encoded
	Body string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_logs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_logs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_api_proto_logs_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *Request) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

// key
type TreatmentServiceResultLogKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique request id generated by Treatment Service, for every incoming request
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The time at which the final response from Treatment Service is generated
	EventTimestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=event_timestamp,json=eventTimestamp,proto3" json:"event_timestamp,omitempty"`
}

func (x *TreatmentServiceResultLogKey) Reset() {
	*x = TreatmentServiceResultLogKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_logs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreatmentServiceResultLogKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreatmentServiceResultLogKey) ProtoMessage() {}

func (x *TreatmentServiceResultLogKey) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_logs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreatmentServiceResultLogKey.ProtoReflect.Descriptor instead.
func (*TreatmentServiceResultLogKey) Descriptor() ([]byte, []int) {
	return file_api_proto_logs_proto_rawDescGZIP(), []int{1}
}

func (x *TreatmentServiceResultLogKey) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *TreatmentServiceResultLogKey) GetEventTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTimestamp
	}
	return nil
}

// message
type TreatmentServiceResultLogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique request id generated by Treatment Service, for every incoming request
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The time at which the final response from Treatment Service is generated
	EventTimestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=event_timestamp,json=eventTimestamp,proto3" json:"event_timestamp,omitempty"`
	// The original request to Treatment Service
	Request *Request `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	// The parsed segment based on registered experiment variables via Project Settings
	Segment string `protobuf:"bytes,4,opt,name=segment,proto3" json:"segment,omitempty"`
	// The project's id of the request
	ProjectId uint32 `protobuf:"varint,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The matched experiment's id based on request's segment values
	ExperimentId int64 `protobuf:"varint,6,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
	// The matched experiment's name based on request's segment values
	ExperimentName string `protobuf:"bytes,7,opt,name=experiment_name,json=experimentName,proto3" json:"experiment_name,omitempty"`
	// The assigned treatment's name based on matched experiment
	TreatmentName string `protobuf:"bytes,8,opt,name=treatment_name,json=treatmentName,proto3" json:"treatment_name,omitempty"`
	// The assigned treatment's config (JSON string) in based on matched experiment
	TreatmentConfig string `protobuf:"bytes,9,opt,name=treatment_config,json=treatmentConfig,proto3" json:"treatment_config,omitempty"`
	// The error (if any) of the request
	Error string `protobuf:"bytes,10,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TreatmentServiceResultLogMessage) Reset() {
	*x = TreatmentServiceResultLogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_logs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreatmentServiceResultLogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreatmentServiceResultLogMessage) ProtoMessage() {}

func (x *TreatmentServiceResultLogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_logs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreatmentServiceResultLogMessage.ProtoReflect.Descriptor instead.
func (*TreatmentServiceResultLogMessage) Descriptor() ([]byte, []int) {
	return file_api_proto_logs_proto_rawDescGZIP(), []int{2}
}

func (x *TreatmentServiceResultLogMessage) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *TreatmentServiceResultLogMessage) GetEventTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTimestamp
	}
	return nil
}

func (x *TreatmentServiceResultLogMessage) GetRequest() *Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *TreatmentServiceResultLogMessage) GetSegment() string {
	if x != nil {
		return x.Segment
	}
	return ""
}

func (x *TreatmentServiceResultLogMessage) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *TreatmentServiceResultLogMessage) GetExperimentId() int64 {
	if x != nil {
		return x.ExperimentId
	}
	return 0
}

func (x *TreatmentServiceResultLogMessage) GetExperimentName() string {
	if x != nil {
		return x.ExperimentName
	}
	return ""
}

func (x *TreatmentServiceResultLogMessage) GetTreatmentName() string {
	if x != nil {
		return x.TreatmentName
	}
	return ""
}

func (x *TreatmentServiceResultLogMessage) GetTreatmentConfig() string {
	if x != nil {
		return x.TreatmentConfig
	}
	return ""
}

func (x *TreatmentServiceResultLogMessage) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_api_proto_logs_proto protoreflect.FileDescriptor

var file_api_proto_logs_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x6f, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x82, 0x01, 0x0a, 0x1c, 0x54,
	0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0xa4, 0x03, 0x0a, 0x20, 0x54, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_logs_proto_rawDescOnce sync.Once
	file_api_proto_logs_proto_rawDescData = file_api_proto_logs_proto_rawDesc
)

func file_api_proto_logs_proto_rawDescGZIP() []byte {
	file_api_proto_logs_proto_rawDescOnce.Do(func() {
		file_api_proto_logs_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_logs_proto_rawDescData)
	})
	return file_api_proto_logs_proto_rawDescData
}

var file_api_proto_logs_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_proto_logs_proto_goTypes = []interface{}{
	(*Request)(nil),                          // 0: monitoring.Request
	(*TreatmentServiceResultLogKey)(nil),     // 1: monitoring.TreatmentServiceResultLogKey
	(*TreatmentServiceResultLogMessage)(nil), // 2: monitoring.TreatmentServiceResultLogMessage
	(*timestamppb.Timestamp)(nil),            // 3: google.protobuf.Timestamp
}
var file_api_proto_logs_proto_depIdxs = []int32{
	3, // 0: monitoring.TreatmentServiceResultLogKey.event_timestamp:type_name -> google.protobuf.Timestamp
	3, // 1: monitoring.TreatmentServiceResultLogMessage.event_timestamp:type_name -> google.protobuf.Timestamp
	0, // 2: monitoring.TreatmentServiceResultLogMessage.request:type_name -> monitoring.Request
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_proto_logs_proto_init() }
func file_api_proto_logs_proto_init() {
	if File_api_proto_logs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_logs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_logs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreatmentServiceResultLogKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_logs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreatmentServiceResultLogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_logs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_logs_proto_goTypes,
		DependencyIndexes: file_api_proto_logs_proto_depIdxs,
		MessageInfos:      file_api_proto_logs_proto_msgTypes,
	}.Build()
	File_api_proto_logs_proto = out.File
	file_api_proto_logs_proto_rawDesc = nil
	file_api_proto_logs_proto_goTypes = nil
	file_api_proto_logs_proto_depIdxs = nil
}
