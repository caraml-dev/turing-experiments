// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	pubsub "github.com/gojek/turing-experiments/common/pubsub"
	mock "github.com/stretchr/testify/mock"
)

// PubSubPublisherService is an autogenerated mock type for the PubSubPublisherService type
type PubSubPublisherService struct {
	mock.Mock
}

// PublishExperimentMessage provides a mock function with given fields: updateType, experiment
func (_m *PubSubPublisherService) PublishExperimentMessage(updateType string, experiment *pubsub.Experiment) error {
	ret := _m.Called(updateType, experiment)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *pubsub.Experiment) error); ok {
		r0 = rf(updateType, experiment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PublishProjectSettingsMessage provides a mock function with given fields: updateType, settings
func (_m *PubSubPublisherService) PublishProjectSettingsMessage(updateType string, settings *pubsub.ProjectSettings) error {
	ret := _m.Called(updateType, settings)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *pubsub.ProjectSettings) error); ok {
		r0 = rf(updateType, settings)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
