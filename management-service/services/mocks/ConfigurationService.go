// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	schema "github.com/caraml-dev/xp/common/api/schema"
	mock "github.com/stretchr/testify/mock"
)

// ConfigurationService is an autogenerated mock type for the ConfigurationService type
type ConfigurationService struct {
	mock.Mock
}

// GetTreatmentServicePluginConfig provides a mock function with given fields:
func (_m *ConfigurationService) GetTreatmentServicePluginConfig() schema.TreatmentServicePluginConfig {
	ret := _m.Called()

	var r0 schema.TreatmentServicePluginConfig
	if rf, ok := ret.Get(0).(func() schema.TreatmentServicePluginConfig); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(schema.TreatmentServicePluginConfig)
	}

	return r0
}

type mockConstructorTestingTNewConfigurationService interface {
	mock.TestingT
	Cleanup(func())
}

// NewConfigurationService creates a new instance of ConfigurationService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConfigurationService(t mockConstructorTestingTNewConfigurationService) *ConfigurationService {
	mock := &ConfigurationService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
