xpManagement:
  image:
    # -- Docker registry for XP Management Service image
    registry: ghcr.io
    # -- Docker image repository for XP Management Service
    repository: caraml-dev/xp/xp-management
    # -- Docker image tag for XP Management Service
    tag: v0.9.0
    # -- Docker image pull policy
    pullPolicy: IfNotPresent

  labels: {}
  replicaCount: 1

  # -- Resources requests and limits for XP Management Service. This should be set
  # according to your cluster capacity and service level objectives.
  # Reference: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources: {}

  livenessProbe:
    # -- HTTP path for liveness check
    path: "/v1/internal/live"
    # -- Liveness probe delay and thresholds
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5

  readinessProbe:
    # -- HTTP path for readiness check
    path: "/v1/internal/ready"
    # -- Liveness probe delay and thresholds
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5

  service:
    # -- XP Management Service Kubernetes service port number
    externalPort: 8080
    # -- XP Management Service container port number
    internalPort: 8080

  ingress:
    # -- Enable ingress to provision Ingress resource for external access to XP Management Service
    enabled: false
    # -- Set host value to enable name based virtual hosting. This allows routing
    # HTTP traffic to multiple host names at the same IP address. If no host is
    # specified, the ingress rule applies to all inbound HTTP traffic through 
    # the IP address specified.
    # https://kubernetes.io/docs/concepts/services-networking/ingress/#name-based-virtual-hosting
    host: ""
    # -- Ingress class annotation to add to this Ingress rule,
    # useful when there are multiple ingress controllers installed
    class: ""

  # -- XP Management Service server configuration.
  apiConfig: {}

  # -- XP UI configuration.
  uiConfig:
    apiConfig:
      xpApiUrl: /api/xp/v1
      mlpApiUrl: /api/v1
    appConfig:
      docsUrl:
        - label: XP User Guide
          href: https://github.com/caraml-dev/xp/tree/main/docs
    authConfig:
      oauthClientId: ""
    sentryConfig: { }

  # -- List of string containing additional XP Management Service server arguments. For
  # example, multiple "-config" can be specified to use multiple config files
  extraArgs: []
  # Example
  # - --config=/etc/secrets/experiment.yaml
  # - --config=/etc/secrets/database.yaml

  # -- List of extra environment variables to add to XP Management Service server container
  extraEnvs: []
  # # Example
  # - name: DEMO_GREETING
  #   value: "Hello from the environment"

  # -- List of extra labels to add to XP Management Service K8s resources
  extraLabels: {}

  # -- Extra volumes to attach to the Pod. For example, you can mount 
  # additional secrets to these volumes
  extraVolumes: []
  # # Example
  # - name: varlog
  #   emptyDir: {}

  # -- Extra volume mounts to attach to XP Management Service server container. For example
  # to mount the extra volume containing secrets
  extraVolumeMounts: []
  # # Example
  # - name: varlog
  #   mountPath: /var/log

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  sentry:
    enabled: false
    # -- Sentry DSN value used by both XP Management Service and XP UI
    dsn: ""

# -- Postgresql configuration to be applied to XP Management Service's postgresql database deployment
# Reference: https://artifacthub.io/packages/helm/bitnami/postgresql/10.16.2#parameters
postgresql:
  # -- Resources requests and limits for XP Management Service database. This should be set
  # according to your cluster capacity and service level objectives.
  # Reference: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    requests:
      memory: 256Mi
      cpu: 500m
  persistence:
    # -- Persist Postgresql data in a Persistent Volume Claim
    enabled: true
    size: 10Gi
  postgresqlDatabase: xp
  postgresqlUsername: xp
  # -- Password for XP Management Service Postgresql database
  postgresqlPassword: xp
  tls:
    enabled: false
  containerPorts:
    postgresql: 5432
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
    replication:
      enabled: false
      user: repl_user
      password: repl_password
      slaveReplicas: 2
      synchronousCommit: "on"
      numSynchronousReplicas: 2
      applicationName: xp

global:
  sentry:
    # -- (string) Global Sentry DSN value
    dsn:

  mlp:
    encryption:
      # -- (string) Global MLP Encryption Key to be used by all MLP components
      key:

swaggerUi:
  # -- Docker tag for Swagger UI https://hub.docker.com/r/swaggerapi/swagger-ui
  image:
    tag: v3.47.1
  # -- URL of API server
  apiServer: http://127.0.0.1/v1
  service:
    # -- Swagger UI container port number
    internalPort: 8081
    # -- Swagger UI Kubernetes service port number
    externalPort: 8080

# Tags are used to include/exclude chart dependencies
tags:
  # -- Specifies if Postgresql database needs to be installed together with XP Management Service
  db: true
