name: tests

on:
  # Automatically run CI on Release and Pre-Release tags and main branch
  # (except changes to non-relevant paths)
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
    branches:
      - main

  # Automatically run CI on branches, that have active PR opened
  pull_request:
    branches:
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/api/.go
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_DB: xp
          POSTGRES_USER: xp
          POSTGRES_PASSWORD: xp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Since Github actions' services don't expose command like how docker-compose does, we'll need to
      # start Google Pubsub Emulator separately since it requires running the command
      # Related schema: https://json.schemastore.org/github-workflow.json
      - name: Setup PubSub emulator
        run: ./.github/emulator/start-emulator.sh pubsub

      - name: Run Management Service test
        env:
          DATABASE_HOST: localhost
          DATABASE_NAME: xp
          DATABASE_USER: xp
          DATABASE_PASSWORD: xp
        run: make test-management-service

      - name: Run Treatment Service test
        env:
          DATABASE_HOST: localhost
          DATABASE_NAME: xp
          DATABASE_USER: xp
          DATABASE_PASSWORD: xp
        run: make test-treatment-service

