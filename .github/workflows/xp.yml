name: CI

on:
  # Automatically run CI on non-main branches (except changes to non-relevant paths)
  push:
    branches:
      - '!main'
    paths-ignore:
      - "plugins/**"
      - ".github/workflows/plugins.yml"

  # Automatically run CI on branches, that have active PR opened
  pull_request:
    branches:
      - main
    paths-ignore:
      - "plugins/**"
      - ".github/workflows/plugins.yml"

env:
  ARTIFACT_RETENTION_DAYS: 7
  GO_VERSION: '1.20'
  GO_LINT_VERSION: v1.51.2

jobs:
  lint-python:
    runs-on: ubuntu-latest
    env:
      PYTHON: 3.7
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
          architecture: x64
      - name: Install dependencies
        run: make install-python-ci-dependencies
      - name: Lint python
        run: make lint-python

  lint-go:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: Lint Common module
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GO_LINT_VERSION }}
          working-directory: common
          args: --timeout 3m --verbose --skip-files=testutils/mocks/ManagementClientInterface.go
      - name: Lint Management Service module
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GO_LINT_VERSION }}
          working-directory: management-service
          skip-pkg-cache: true
          skip-build-cache: true
          args: --timeout 3m --verbose
      - name: Lint Treatment Service module
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GO_LINT_VERSION }}
          working-directory: treatment-service
          skip-pkg-cache: true
          skip-build-cache: true
          args: --timeout 3m --verbose

  unit-tests-management:
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/api/.go
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_DB: xp
          POSTGRES_USER: xp
          POSTGRES_PASSWORD: xp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Test Dependencies
        uses: ./.github/actions/setup-tests
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Run Management Service test
        env:
          DATABASE_HOST: localhost
          DATABASE_NAME: xp
          DATABASE_USER: xp
          DATABASE_PASSWORD: xp
        run: make test-management-service

  unit-tests-treatment:
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/api/.go
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_DB: xp
          POSTGRES_USER: xp
          POSTGRES_PASSWORD: xp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Test Dependencies
        uses: ./.github/actions/setup-tests
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Run Treatment Service test
        env:
          DATABASE_HOST: localhost
          DATABASE_NAME: xp
          DATABASE_USER: xp
          DATABASE_PASSWORD: xp
        run: make test-treatment-service

  e2e-tests:
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/api/.go
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_DB: xp
          POSTGRES_USER: xp
          POSTGRES_PASSWORD: xp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Test Dependencies
        uses: ./.github/actions/setup-tests
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
          architecture: x64

      - name: Install dependencies
        run: make install-python-ci-dependencies
      
      - name: Build binaries
        run: make build

      - name: Run E2E tests
        env:
          DATABASE_HOST: localhost
          DATABASE_NAME: xp
          DATABASE_USER: xp
          DATABASE_PASSWORD: xp
        run: make e2e-ci
