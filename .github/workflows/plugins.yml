name: plugins

on:
  # Automatically run CI on Release and Pre-Release tags and main branch
  # (only if there are changes to relevant paths)
  push:
    tags:
      - "xp-engine-plugin/v[0-9]+.[0-9]+.[0-9]+*"
    branches:
      - main
    paths:
      - ".github/workflows/plugins.yml"
      - "plugins/**"

  # Automatically run CI on branches, that have active PR opened
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/plugins.yml"
      - "plugins/**"

jobs:
  lint-go:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        id: setup-go
        uses: actions/setup-go@v3
        with:
          go-version: 1.16
      - uses: actions/checkout@v3
      - name: Lint Plugins module
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.41.1
          working-directory: plugins/turing
          skip-pkg-cache: true
          skip-build-cache: true
          args: --timeout 3m --verbose

  turing-experiment-engine-xp-plugin-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./plugins/turing

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run Plugins test
        run: make test-plugin

  release-rules:
    runs-on: ubuntu-latest
    outputs:
      release-type: ${{ steps.release-rules.outputs.release-type }}
    steps:
      - uses: actions/checkout@v2
      - id: release-rules
        uses: ./.github/actions/release-rules
        with:
          prefix: xp-engine-plugin/

  publish-turing-experiment-engine-xp-plugin:
    # Automatically publish release and pre-release artifacts.
    #
    # As for dev releases, make it possible to publish artifacts
    # manually by approving 'deployment' in the 'manual' environment.
    #
    # Dev build can be released either from the 'main' branch or
    # by running this workflow manually with `workflow_dispatch` event.
#    if: >-
#      contains('release,pre-release', needs.release-rules.outputs.release-type)
#        || ( github.event_name != 'pull_request' )
#        || ( github.event.pull_request.head.repo.full_name == github.repository )
#    environment: ${{ needs.release-rules.outputs.release-type == 'dev' && 'manual' || '' }}
    runs-on: ubuntu-latest
    outputs:
      xp-engine-plugin-image: ${{ steps.build-image.outputs.xp-engine-plugin-image }}
    needs:
      - release-rules
      - turing-experiment-engine-xp-plugin-tests
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build Turing Experiment Engine XP plugin binary
        working-directory: plugins/turing
        run: make build

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        id: build-image
        working-directory: plugins/turing
        env:
          DOCKER_REGISTRY: ghcr.io/${{ github.repository }}
          PLUGIN_NAME: xp
        run: |
          set -o pipefail
          make build-image | tee output.log
          echo "::set-output name=xp-engine-plugin-image::$(sed -n 's%Building docker image: \(.*\)%\1%p' output.log)"

#      - name: Publish Turing Experiment Engine XP Plugin Docker Image
#        run: docker push ${{ steps.build-image.outputs.xp-engine-plugin-image }}
